{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/calculate-import-vat/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React from \"react\";\n\nfunction useStatefulRef() {\n  var initialVal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _React$useState = React.useState(initialVal),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cur = _React$useState2[0],\n      setCur = _React$useState2[1];\n\n  var _React$useRef = React.useRef({\n    current: cur\n  }),\n      ref = _React$useRef.current;\n\n  Object.defineProperty(ref, \"current\", {\n    get: function get() {\n      return cur;\n    },\n    set: function set(value) {\n      if (!Object.is(cur, value)) {\n        cur = value;\n        setCur(value);\n      }\n    }\n  });\n  return ref;\n}\n\nexport { useStatefulRef as default };","map":{"version":3,"sources":["/Users/mac/Desktop/calculate-import-vat/node_modules/@bedrock-layout/use-stateful-ref/lib/index.m.js"],"names":["React","useStatefulRef","initialVal","useState","cur","setCur","useRef","current","ref","Object","defineProperty","get","set","value","is","default"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,SAASC,cAAT,GAA2C;AAAA,MAAnBC,UAAmB,uEAAN,IAAM;;AACzC,wBAAoBF,KAAK,CAACG,QAAN,CAAeD,UAAf,CAApB;AAAA;AAAA,MAAKE,GAAL;AAAA,MAAUC,MAAV;;AACA,sBAAyBL,KAAK,CAACM,MAAN,CAAa;AACpCC,IAAAA,OAAO,EAAEH;AAD2B,GAAb,CAAzB;AAAA,MAAiBI,GAAjB,iBAAQD,OAAR;;AAGAE,EAAAA,MAAM,CAACC,cAAP,CAAsBF,GAAtB,EAA2B,SAA3B,EAAsC;AACpCG,IAAAA,GAAG,EAAE;AAAA,aAAMP,GAAN;AAAA,KAD+B;AAEpCQ,IAAAA,GAAG,EAAE,aAACC,KAAD,EAAW;AACd,UAAI,CAACJ,MAAM,CAACK,EAAP,CAAUV,GAAV,EAAeS,KAAf,CAAL,EAA4B;AAC1BT,QAAAA,GAAG,GAAGS,KAAN;AACAR,QAAAA,MAAM,CAACQ,KAAD,CAAN;AACD;AACF;AAPmC,GAAtC;AASA,SAAOL,GAAP;AACD;;AACD,SAASP,cAAc,IAAIc,OAA3B","sourcesContent":["import React from \"react\";\nfunction useStatefulRef(initialVal = null) {\n  let [cur, setCur] = React.useState(initialVal);\n  const { current: ref } = React.useRef({\n    current: cur\n  });\n  Object.defineProperty(ref, \"current\", {\n    get: () => cur,\n    set: (value) => {\n      if (!Object.is(cur, value)) {\n        cur = value;\n        setCur(value);\n      }\n    }\n  });\n  return ref;\n}\nexport { useStatefulRef as default };\n"]},"metadata":{},"sourceType":"module"}